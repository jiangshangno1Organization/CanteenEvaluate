<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.resturant.dao.SellerMapper" >
  <resultMap id="BaseResultMap" type="cn.resturant.entity.Seller" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="commentid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="age" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="memo" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="memo1" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, commentid, age, memo, memo1
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectall" resultType="cn.resturant.entity.Sellerex">

SELECT *,COUNT(*) as avgs FROM seller LEFT JOIN comments ON seller.`id`=comments.`parentsid` WHERE (comments.`typeid`='2'OR comments.`typeid` IS NULL) GROUP BY seller.`id`  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.resturant.entity.Seller" >
    insert into seller (id, name, sex, 
      commentid, age, memo, 
      memo1)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{commentid,jdbcType=INTEGER}, #{age,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{memo1,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.resturant.entity.Seller" >
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="commentid != null" >
        commentid,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="memo1 != null" >
        memo1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="commentid != null" >
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="memo1 != null" >
        #{memo1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.resturant.entity.Seller" >
    update seller
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="commentid != null" >
        commentid = #{commentid,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="memo1 != null" >
        memo1 = #{memo1,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.resturant.entity.Seller" >
    update seller
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      commentid = #{commentid,jdbcType=INTEGER},
      age = #{age,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      memo1 = #{memo1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>